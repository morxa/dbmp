- name: add kubelet base config
  template:
    src: etc-kubernetes-kubelet.j2
    dest: /etc/kubernetes/kubelet
  notify: restart kubelet
- name: add kube-proxy config
  copy:
    src: etc-kubernetes-proxy
    dest: /etc/kubernetes/proxy
  notify: restart kube-proxy
- name: add kubelet kubeconfig
  template:
    src: etc-kubernetes-kubeconfig.j2
    dest: /etc/kubernetes/kubeconfig
  notify:
    - restart kubelet
    - restart kube-proxy
- name: add client certificate
  copy:
    src: "certs/{{ ansible_hostname }}-kubernetes-client.crt"
    dest: "/etc/kubernetes/ssl/{{ ansible_hostname }}-client.crt"
    owner: kube
    group: kube
    mode: ugo=r
  notify: restart kubelet
- name: add client certificate key
  copy:
    src: "certs/{{ ansible_hostname }}-kubernetes-client.key"
    dest: "/etc/kubernetes/ssl/{{ ansible_hostname }}-client.key"
    owner: kube
    group: kube
    mode: u=r,go=
  notify: restart kubelet
- name: add script to automatically stop kubelet on user login
  copy:
    src: login-controller/kubernetes-login-controller.sh
    dest: /usr/local/bin/
    owner: root
    group: root
    mode: 0755
  notify: restart login-controller
- name: add systemd unit file for login controller
  copy:
    src: login-controller/kubernetes-login-controller.service
    dest: /etc/systemd/system/
    owner: root
    group: root
    mode: 0755
  notify:
    - reload systemd services
    - restart login-controller
- name: add config file for login controller
  template:
    src: login-controller.conf.j2
    dest: /etc/kubernetes/login-controller.conf
  notify: restart login-controller
- name: install python2-firewall
  dnf: name=python2-firewall state=latest
- name: open kubelet port
  firewalld:
    port: 10250/tcp
    permanent: true
    state: enabled
    immediate: yes
- name: open cadvisor port
  firewalld:
    port: 4194/tcp
    permanent: true
    state: enabled
    immediate: yes
- name: start kube-proxy
  service:
    name: kube-proxy
    enabled: true
    state: started
- name: start kubelet
  service:
    name: kubelet
    enabled: true
    state: started
- name: start docker
  service:
    name: docker
    enabled: true
    state: started
- name: start login-controller
  service:
    name: kubernetes-login-controller
    enabled: true
    state: started
