- name: install mongodb
  dnf: name=mongodb state=latest
  notify: restart mongodb
- name: add mongodb config
  template:
    src: etc-mongod.conf.j2
    dest: /etc/mongod.conf
  notify: restart mongodb
- name: create directory used for mongodb certificates
  file:
    path: /etc/mongodb/ssl
    state: directory
- name: copy CA certificate
  copy:
    src: certs/ca.crt
    dest: /etc/mongodb/ssl/ca.pem
  notify: restart mongodb
- name: copy mongodb server certificate
  copy:
    src: certs/{{ ansible_hostname }}-mongodb-server.pem
    dest: /etc/mongodb/ssl/server.pem
    owner: root
    group: mongodb
    mode: u=rw,g=r,o=
  notify: restart mongodb
- name: enable mongodb
  service:
    name: mongod
    enabled: yes
  notify: restart mongodb
- name: flush handlers
  meta: flush_handlers
- include_vars: mongo_users.yml
- name: add admin users
  command: >
    mongo --eval
    'db.getSiblingDB("$external").runCommand(
      {
        createUser: "{{ item.user }}",
        roles: [ { role: "useAdminAnyDatabase", db: "admin" } ],
      })'
  with_items: "{{ mongo_users.admin }}"
- name: add database users
  command:  >
    mongo --eval
    'db.getSiblingDB("$external").runCommand(
      {
        createUser: "{{ item.user }}",
        roles: {{ item.roles }}
      })'
  with_items: "{{ mongo_users.user }}"
